// Â© wouterpruym1828

// @version=5

strategy(title="Trailing Stop + Take Profit + Stop loss (v03)", shorttitle="TS+TP+SL%-v03", 
     overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=50, max_bars_back=200, pyramiding=2, 
     initial_capital=1000, commission_value=0.2, commission_type=strategy.commission.percent, calc_on_order_fills=false, calc_on_every_tick=false, slippage=2)


// # ========================================================================= #
// --- INDICATOR SECTION --- //
// # ========================================================================= #

// Indicator Input options+
i_FastEMA = input.int(title = "Fast EMA period", minval = 0, defval = 1)
i_SlowEMA = input.int(title = "Slow EMA period", minval = 0, defval = 9)
     
// Calculate moving averages
fastEMA = ta.ema(close[1], i_FastEMA)
slowEMA = ta.ema(close[1], i_SlowEMA)

// Plot moving averages
plot(fastEMA, title="Fast SMA", color=color.blue)
plot(slowEMA, title="Slow SMA", color=color.orange)


// # ========================================================================= #
// --- INPUT Section --- //
// # ========================================================================= #

// # ========================================================================= #
// --- Input 1st stop loss level (from entryPrice) with input options (optional) --- //
// # ========================================================================= #

longStopPerc        = input.float(title="Long Entry Stop Loss (%)", minval=0.0, step=0.1, defval=2.5) * 0.01
shortStopPerc       = input.float(title="Short Entry Stop Loss (%)", minval=0.0, step=0.1, defval=2) * 0.01


// # ========================================================================= #
// --- Input take profit price level and take profit ratio with input options (optional) --- //
// # ========================================================================= #

longTpPerc          = input.float(title="Long Take Profit (%)", minval=0.0, step=0.1, defval=3) 
shortTpPerc         = input.float(title="Short Take Profit (%)", minval=0.0, step=0.1, defval=3) 
TP_Ratio            = input.float(title="Unwind Position Size % @ TP", defval=80, step=1, 
                     tooltip="Ex: 50 = closing 50% of the position once TP is reached") / 100


// # ========================================================================= #
// --- Input trailing stop level (from Take Profit price) with input options (optional) --- //
// # ========================================================================= #

longTrailPerc = input.float(title="Long TP Trailing Stop (%)", minval=0.0, step=0.1, defval=5.4) * 0.01
shortTrailPerc = input.float(title="Short TP Trailing Stop (%)", minval=0.0, step=0.1, defval=7) * 0.01


// # ========================================================================= #
// --- Input 2nd stop loss (from and after take profit reached) with input options (optional) --- //
// # ========================================================================= #

longStopTpPerc      = input.float(title="Long 2nd Stop Loss from/after TP", minval=0.0, step=0.1, defval=1)
shortStopTpPerc     = input.float(title="Short 2nd Stop Loss from/after TP", minval=0.0, step=0.1, defval=1)


// # ========================================================================= #
// --- CONFIGURATION SECTION --- //
// # ========================================================================= #

// # ========================================================================= #
// --- Determine entry price --- //
// # ========================================================================= #

entryPrice          = 0.0
entryPrice          := strategy.opentrades.entry_price(strategy.opentrades - 1)


// # ========================================================================= #
// --- Determine Position prices --- //
// # ========================================================================= #

percentAsPoints(pcnt) =>
    strategy.position_size != 0 ? math.round(pcnt / 100.0 * strategy.position_avg_price / syminfo.mintick) : float(na)

percentAsPrice(pcnt) =>
    strategy.position_size != 0 ? ((pcnt / 100.0) + 1.0) * strategy.position_avg_price : float(na)
 
current_position_size   = math.abs(strategy.position_size)
initial_position_size   = math.abs(ta.valuewhen(strategy.position_size[1] == 0.0, strategy.position_size, 0)) 


// # ========================================================================= #
// --- Determine take profit prices --- //
// # ========================================================================= #  

longTP  = strategy.position_avg_price + percentAsPoints(longTpPerc) * syminfo.mintick * strategy.position_size / math.abs(strategy.position_size)
bool stageLongTP        = false

if high > longTP
    stageLongTP         := true

shortTP  = strategy.position_avg_price + percentAsPoints(shortTpPerc) * syminfo.mintick * strategy.position_size / math.abs(strategy.position_size)
bool stageShortTP       = false

if low < shortTP
    stageShortTP        := true


// # ========================================================================= #
// --- Determine Trailing Stop (from Take Profit) prices --- //
// # ========================================================================= #

longTrailPrice      = 0.0
shortTrailPrice     = 0.0

if (strategy.position_size > 0) and stageLongTP
    longTrailPrice  := math.max(longTP * (1 + longTrailPerc), longTrailPrice[1])
else
    longTrailPrice  := longTP * 1.1       // 10%

if (strategy.position_size < 0) and stageShortTP
    shortTrailPrice := math.min(shortTP * (1 - shortTrailPerc), shortTrailPrice[1])
else
    shortTrailPrice := shortTP / 1.1       // 10%


// # ========================================================================= #
// --- Determine 1st stop loss prices --- //
// # ========================================================================= #

longLossPrice           = entryPrice * (1 - longStopPerc)
shortLossPrice          = entryPrice * (1 + shortStopPerc)


// # ========================================================================= #
// --- Determine trailing stop (for stop loss) prices --- //
// # ========================================================================= #

longStopPrice      = 0.0
shortStopPrice     = 0.0

if (strategy.position_size > 0) and (close < entryPrice)
    longStopPrice  := math.min(longLossPrice * (1 - longStopPerc), longStopPrice[1])
else
    longStopPrice  := longLossPrice / 1.1       // 10% Default

if (strategy.position_size < 0) and (close > entryPrice)
    shortStopPrice := math.max(shortLossPrice * (1 + shortStopPerc), shortStopPrice[1])
else
    shortStopPrice := shortLossPrice * 1.1     // 10% Default


// # ========================================================================= #
// --- Determine 2nd stop loss after reaching TP --- //
// # ========================================================================= #

longStopTP          = 0.0
shortStopTP         = 0.0

longStopTP          := longTP * (1 - (longStopTpPerc / 100))
shortStopTP         := shortTP * (1 + (shortStopTpPerc / 100))


// # ========================================================================= #
// --- Plot trail stop, stop loss and take profit values for confirmation --- //
// # ========================================================================= #

plot(entryPrice, color=color.black, style=plot.style_cross, linewidth=2, title="Entry Price")

plot(series=(strategy.position_size > 0) ? longTrailPrice : na,
     color=color.fuchsia, style=plot.style_cross,
     linewidth=2, title="Long Trail Stop")
plot(series=(strategy.position_size < 0) ? shortTrailPrice : na,
     color=color.fuchsia, style=plot.style_cross,
     linewidth=2, title="Short Trail Stop")

plot(series=(strategy.position_size > 0) ? longLossPrice : na,
     color=color.olive, style=plot.style_cross,
     linewidth=2, title="Long Stop Loss")
plot(series=(strategy.position_size < 0) ? shortLossPrice : na,
     color=color.olive, style=plot.style_cross,
     linewidth=2, title="Short Stop Loss")
     
plot(series=(strategy.position_size > 0) ? longTP : na,
     color=color.green, style=plot.style_cross,
     linewidth=2, title="Long TP")
plot(series=(strategy.position_size < 0) ? shortTP : na,
     color=color.green, style=plot.style_cross,
     linewidth=2, title="Short TP")
     
plot(series=(strategy.position_size > 0) ? longStopTP : na,
     color=color.aqua, style=plot.style_cross,
     linewidth=2, title="Long TP Stop Loss")
plot(series=(strategy.position_size < 0) ? shortStopTP : na,
     color=color.aqua, style=plot.style_cross,
     linewidth=2, title="Short TP Stop Loss")


// # ========================================================================= #
// --- STRATEGY SECTION --- //
// # ========================================================================= #

// Calculate trading conditions
buy  = ta.crossover(fastEMA, slowEMA)
sell = ta.crossunder(fastEMA, slowEMA)


// # ========================================================================= #
// --- Evaluating trailing stop  --- //
// # ========================================================================= #


//var longStopPrice = 0.0

//if strategy.position_avg_price < longTP 
//    if longTrailPrice < longLossPrice
//        longStopPrice := longLossPrice
//    else if longTrailPrice > longLossPrice
//        longStopPrice := longTrailPrice
        
//if stageLongTP == true
//    if longTrailPrice < longStopTP
//        longStopPrice := longStopTP
//    else if longTrailPrice > longStopTP
//        longStopPrice := longTrailPrice


//var shortStopPrice = 0.0

//if strategy.position_avg_price > shortTP
//    if shortTrailPrice > shortLossPrice
//        shortStopPrice := shortLossPrice
//    else if shortTrailPrice < shortLossPrice
//       shortStopPrice := shortTrailPrice
        
//if stageShortTP == true
//    if shortTrailPrice > shortStopTP
//        shortStopPrice := shortStopTP
//    else if shortTrailPrice < shortStopTP
//        shortStopPrice := shortTrailPrice


// # ========================================================================= #
// --- Submit entry orders --- //
// # ========================================================================= #

strategy.entry("Enter Long", strategy.long, when = buy,
     alert_message="{  \"message_type\": \"bot\",  \"bot_id\": 8838824,  \"email_token\": \"75574b82-094c-4c8d-9843-058a372d5fac\",  \"delay_seconds\": 0}")

strategy.entry("Enter Short", strategy.short, when = sell,
     alert_message="{  \"message_type\": \"bot\",  \"bot_id\": 8851697,  \"email_token\": \"75574b82-094c-4c8d-9843-058a372d5fac\",  \"delay_seconds\": 0}")


// # ========================================================================= #
// --- Submit exit orders for take profit (stop loss moves to entry price) and stop price --- //
// # ========================================================================= #

if (strategy.position_size > 0)
    strategy.exit(id="Long TP - Start Trailing", from_entry = "Enter Long", 
         qty_percent = 50, //qty = initial_position_size * TP_Ratio, 
         when = longTP, loss = longStopTP, limit = longTrailPrice, 
         alert_message="{  \"action\": \"close_at_market_price\",  \"message_type\": \"bot\",  \"bot_id\": 8838824,  \"email_token\": \"75574b82-094c-4c8d-9843-058a372d5fac\",  \"delay_seconds\": 0}")
    strategy.exit(id="Long SL - Start Trailing", from_entry = "Enter Long", 
         qty_percent = 50, 
         when = longLossPrice, loss = longStopPrice, limit = initial_position_size,
         alert_message="{  \"action\": \"close_at_market_price\",  \"message_type\": \"bot\",  \"bot_id\": 8838824,  \"email_token\": \"75574b82-094c-4c8d-9843-058a372d5fac\",  \"delay_seconds\": 3}")

if (strategy.position_size < 0)
    strategy.exit(id="Sell TP (EXIT)", qty = initial_position_size * TP_Ratio, limit = shortTP,
         alert_message="{  \"action\": \"start_trailing\",  \"message_type\": \"bot\",  \"bot_id\": 8851697,  \"email_token\": \"75574b82-094c-4c8d-9843-058a372d5fac\",  \"delay_seconds\": 0}")
    // shortLossPrice := shortStopTP
    strategy.exit(id="Sell Stop (EXIT)", stop=shortStopPrice,
         alert_message="{  \"action\": \"close_at_market_price\",  \"message_type\": \"bot\",  \"bot_id\": 8851697,  \"email_token\": \"75574b82-094c-4c8d-9843-058a372d5fac\",  \"delay_seconds\": 3}")
