// @version=4
study("Anti-Volume Stop Loss multi timeframe [LM]", shorttitle = "AVSL [LM]", overlay = true, max_bars_back=5000)

_1                          = input(false,   "══════════════ length setting ════════════════")
i_fastLength                = input(12, minval=1, title="Fast average")                                   
i_slowLength                = input(26, minval=1, title="Slow average")

_2                          = input(false,   "══════════════ price setting ════════════════")
i_vpciSrc                   = input(close, title="Fast Price type" )
i_timeframe                 = input("D", title="Timeframe", type=input.resolution)
i_mult                      = input(2.0, minval=0.001, maxval=50, title="StdDev")
i_offset                    = input(2, "Offset", type = input.integer, minval = -500, maxval = 500)

// Functions

f_calcVpci(_src) =>
    vpc = vwma(_src, i_slowLength) - sma(_src, i_slowLength)
    vpr = vwma(_src, i_fastLength)/sma(_src, i_fastLength)
    vm  = sma(volume, i_fastLength)/sma(volume, i_slowLength)
    [vpc,vpr,vm]

f_priceCalc(_vpc, _vpr, _vm, _src) =>                                                    
    vpci = _vpc*_vpr*_vm
    
    lenV = if _vpc <0
        int(round(abs(vpci-3)))
    else if _vpc>=0
        round(vpci+3)
    else
        1
    
    vpcc = if (_vpc > -1 and _vpc <0)
        -1
    else if (_vpc < 1 and _vpc >= 0)
        1
    else
        _vpc
    
    price=0.0
    for i=0 to lenV - 1
        price:=price+(_src[i]*1/vpcc[i]*1/_vpr[i])
    priceV=price/lenV/100
    max_bars_back(priceV, 5000)
    priceV
    
f_avslCalc() =>
    [vpc,vpr,vm] = f_calcVpci(i_vpciSrc)
    vpci = vpc*vpr*vm

    dev = i_mult*vpci*vm                                                          
    avsl = sma(low - f_priceCalc(vpc, vpr, vm, low) + dev, i_slowLength)                         

    
avsl = security(syminfo.tickerid, i_timeframe, f_avslCalc(), lookahead=true)

plot(avsl, title="AWSL", color = color.white, transp=0, linewidth=1, style=plot.style_cross, offset=i_offset)