//@version=3
strategy("Default Strategy Inputs", overlay=false)

///////////////////////////////////////////////////////////////////////////////
// Date:2017.11.13
// Author: Backtest-Rookies.com
// Version: 1.0
// Description: A Series of default strategy inputs 
///////////////////////////////////////////////////////////////////////////////
// Notes:
//  - This template is better suited to instruments that trade 24/5 or 24/7 (crypto)
//    as trading sessions can be selected. 
//////////////////////////////////////////////////////////////////////////////

// Create General Strategy Inputs
dir_inp = input(defval="Both", title='Trade Direction', options=["Long Only","Short Only","Both"])
st_yr_inp = input(defval=2017, title='Backtest Start Year', type=integer)
st_mn_inp = input(defval=01, title='Backtest Start Month', type=integer)
st_dy_inp = input(defval=01, title='Backtest Start Day', type=integer)
en_yr_inp = input(defval=2025, title='Backtest End Year', type=integer)
en_mn_inp = input(defval=01, title='Backtest End Month', type=integer)
en_dy_inp = input(defval=01, title='Backtest End Day', type=integer)

// Default Stop Types
fstp = input(defval=true, title="Fixed Perc stop")
fper = input(defval=0.1, title='Percentage for fixed stop', type=float)
atsp = input(defval=false, title="ATR Based stop")
atrl = input(defval=7, title='ATR Length for stop')
atrm = input(defval=1, title='ATR Multiplier for stop')

// Sessions
asa_inp = input(defval=true, title="Trade the Asian Session")
eur_inp = input(defval=true, title="Trade the European Session")
usa_inp = input(defval=true, title="Trade the US session")
ses_cls = input(defval=true, title="End of Session Close Out?")

// Session Start / End times (In exchange TZ = UTC-5)    
asa_ses = "1700-0300" 
eur_ses = "0200-1200" 
usa_ses = "0800-1700"  

in_asa = time(period, asa_ses)
in_eur = time(period, eur_ses)
in_usa = time(period, usa_ses)

// Long / Short Logic
dir = dir_inp == "Both" ? strategy.direction.all : 
  dir_inp == "Short Only" ? strategy.direction.short :
  strategy.direction.long
strategy.risk.allow_entry_in(dir)

// Set start and end dates for backtest
start = timestamp(st_yr_inp, st_mn_inp, st_dy_inp,00,00)
end = timestamp(en_yr_inp, en_mn_inp, en_dy_inp,00,00)

// Check if we are in a sessions we want to trade
can_trade = asa_inp and not na(in_asa) ? true :
  eur_inp and not na(in_eur) ? true :
  usa_inp and not na(in_usa) ? true :
  false
  
// atr calc for stop
atr = atr(atrl)
atr_stp_dst = atr * atrm

// --------------------------------------------------------- //
//                                                           //
//                  INSERT STRATEGY CODE                     //
//                                                           //
// --------------------------------------------------------- //
//
// Notes:
//  1 - To use the backtest start and end time you must include
//      time >= start and time <= end in your entry checks
//
//  2 - To use the session input functions you must include the
//      can_trade check in your entry conditions 
// 
//  3 - End of session supported but requires that that close_all
//      call below is not removed from the strategy. 
//
// --------------------------------------------------------- //

long_condition = false // can_trade, time >= start etc...
short_condition = false

if (long_condition)
    strategy.entry("Long Entry",  strategy.long)
    if strategy.position_size <= 0 // Less than as in both direction strat - Could be long before switching
        if atsp
            atr_stop = open  - atr_stp_dst
            strategy.exit('ATR Fixed Short Stop', "Long Entry", stop=atr_stop)
        if fstp
            stop = open - (open * fper)
            strategy.exit('Perc Fixed Long Stop Exit', "Long Entry", stop=stop)

if (short_condition)
    strategy.entry("Short Entry",strategy.short)
    if strategy.position_size >= 0 // Greater than as in both direction strat - Could be long before switching
        if atsp
            atr_stop = open  + atr_stp_dst
            strategy.exit('ATR Fixed Short Stop Exit', "Short Entry", stop=atr_stop)
        if fstp
            stop = open + (open * fper)
            strategy.exit('Perc Fixed Short Stop Exit', "Short Entry", stop=stop)


strategy.close_all(when=not can_trade and ses_cls)

// Testing & Debug Plots
//plot(can_trade ? 1 : 0, color=purple, linewidth=2)
//plot(na(in_asa) ? 0 : 1, color=red)
//plot(na(in_eur) ? 0 : 1, color=blue)
//plot(na(in_usa) ? 0 : 1, color=green)

