// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © outlier1500
// Credit for the original code snippets goes to © millerrh
//This script takes in timeframe input to automatically mark the highs and lows of previous candles, similar to how sara, on her youtube video demonstrates th
//the way that she trades the strat
//@version=4
study("#TheStrat - Previous Candles Highs and Lows", overlay=true)

// ++ ADDED USER INPUT ++
tf1 = input(title="Timeframe 1", type=input.resolution, defval = "180")
tf2 = input(title="Timeframe 2", type = input.resolution, defval = "360")
tf3 = input(title="Timeframe 3", type = input.resolution, defval = "720")
tf4 = input(title="Timeframe 3", type = input.resolution, defval = "D")
showTf1 = input(title="Show TF1??", type = input.bool, defval = true)
showTf2 = input(title="Show TF2??", type = input.bool, defval = true)
showTf3 = input(title="Show TF3??", type = input.bool, defval = true)
showTf4 = input(title="Show TF4??", type = input.bool, defval = true)
// == HORIZONTAL HIGH/LOW LINES FOR HIGHER TIME FRAMES ==
// Inputs
showMTFLevels = input(title = "Show Multiple Timeframe S/R Levels?", type = input.bool, defval = true, group = "Higher Timeframe Levels",
  tooltip = "Displays the highs and lows of higher timeframes to use as support/resistance levels for potential targets.")
tf1Color = input(#B10BF5, title = "TF1", type = input.color, group = "Higher Timeframe Levels", inline = "MTF")
tf2Color = input(#0932FF, title = "??TF2", type = input.color, group = "Higher Timeframe Levels", inline = "MTF")
tf3Color = input(#FFAA00, title = "??TF3", type = input.color, group = "Higher Timeframe Levels", inline = "MTF")
tf4Color = input(#f2f2f2, title = "??TF4", type = input.color, group = "Higher Timeframe Levels", inline = "MTF")

// Calculations
openPrice(tf) => security(syminfo.tickerid, tf, time[1])
lowPrice(tf) => security(syminfo.tickerid, tf, low[1])
highPrice(tf) => security(syminfo.tickerid, tf, high[1])

// TIMEFRAME 2
tf1Low = showMTFLevels and showTf1 ? lowPrice(tf1) : na
tf1High = showMTFLevels and showTf1 ? highPrice(tf1) : na
tf1Open = showMTFLevels and showTf1 ? openPrice(tf1) : na
tf1LineLow = line.new(x1=tf1Open, y1=tf1Low, x2=time, y2=tf1Low, xloc = xloc.bar_time, extend = extend.right, color=tf1Color)
line.delete(tf1LineLow[1])
tf1LineHigh = line.new(x1=tf1Open, y1=tf1High, x2=time, y2=tf1High, xloc = xloc.bar_time, extend = extend.right, color=tf1Color)
line.delete(tf1LineHigh[1])

// TIMEFRAME 2
tf2Low = showMTFLevels and showTf2 ? lowPrice(tf2) : na
tf2High = showMTFLevels and showTf2 ? highPrice(tf2) : na
tf2Open = showMTFLevels and showTf2 ? openPrice(tf2) : na
tf2LineLow = line.new(x1=tf2Open, y1=tf2Low, x2=time, y2=tf2Low, xloc = xloc.bar_time, extend = extend.right, color=tf2Color)
line.delete(tf2LineLow[1])
tf2LineHigh = line.new(x1=tf2Open, y1=tf2High, x2=time, y2=tf2High, xloc = xloc.bar_time, extend = extend.right, color=tf2Color)
line.delete(tf2LineHigh[1])

// TIMEFRAME 3 
tf3Low = showMTFLevels and showTf3 ? lowPrice(tf3) : na
tf3High = showMTFLevels and showTf3 ? highPrice(tf3) : na
tf3Open = showMTFLevels and showTf3 ? openPrice(tf3) : na
tf3LineLow = line.new(x1=tf3Open, y1=tf3Low, x2=time, y2=tf3Low, xloc = xloc.bar_time, extend = extend.right, color=tf3Color)
line.delete(tf3LineLow[1])
tf3LineHigh = line.new(x1=tf3Open, y1=tf3High, x2=time, y2=tf3High, xloc = xloc.bar_time, extend = extend.right, color=tf3Color)
line.delete(tf3LineHigh[1])

// TIMEFRAME 4 
tf4Low = showMTFLevels and showTf4 ? lowPrice(tf4) : na
tf4High = showMTFLevels and showTf4 ? highPrice(tf4) : na
tf4Open = showMTFLevels and showTf4? openPrice(tf4) : na
tf4LineLow = line.new(x1=tf4Open, y1=tf4Low, x2=time, y2=tf4Low, xloc = xloc.bar_time, extend = extend.right, color=tf4Color)
line.delete(tf4LineLow[1])
tf4LineHigh = line.new(x1=tf4Open, y1=tf4High, x2=time, y2=tf4High, xloc = xloc.bar_time, extend = extend.right, color=tf4Color)
line.delete(tf4LineHigh[1])